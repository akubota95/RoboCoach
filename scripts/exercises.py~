#!/usr/bin/env python
import rospy
from std_msgs.msg import Float32
from geometry_msgs.msg import Twist
from rospy.numpy_msg import numpy_msg
from rospy_tutorials.msg import Floats
import numpy

global current_exercise_id

def callback(data):

    rospy.loginfo(rospy.get_caller_id() + "I heard %f", data.data)
    #rospy.loginfo(rospy.get_caller_id() + "I heard %f", data.data[0])
    #rospy.loginfo(rospy.get_caller_id() + "I heard %f", data.data[1])
    #rospy.loginfo(rospy.get_caller_id() + "I heard %f", data.data[2])
    print ("--------------")
    
    '''
    #detect the currently active excercise 
    if(data.data[0]=1):
	current_exercise_id = 1
    elif(data.data[1]=1):
	current_exercise_id = 2
    elif(data.data[2]=1):
	current_exercise_id = 3
    else:
	current_exercise_id = -1
    '''
    current_exercise_id = int (data);


def recording(data):

    pub=rospy.Publisher('record', numpy_msg(Floats),queue_size=1)


    if(current_exercise_id == 1):
	print ( " current_exercise_id  is 1" )
	pub.publish(numpy.array([1, 0 , 0 , 0], dtype=numpy.float32))



def listener():

    rospy.init_node('first_exercise_recording', anonymous=True)

    #gets the current status of the excerxises: exercises = [0, 0, 0], 0: active, 1:deactive
    rospy.Subscriber('exercises', Floats32, callback)

    #gets x and y coordinates of the green object and yellow object
    rospy.Subscriber('coordinates', numpy_msg(Floats), recording)

    rospy.spin()

if __name__ == '__main__':
    listener()
