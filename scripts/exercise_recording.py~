#!/usr/bin/env python
import rospy
from std_msgs.msg import Float32
from geometry_msgs.msg import Twist
from rospy.numpy_msg import numpy_msg
from rospy_tutorials.msg import Floats
from std_msgs.msg import String
from std_msgs.msg import Int16
import numpy

class recording_node(object):
        def __init__(self):
    	    # Params
	    #ID corresponding to the currently active exercise
            self.current_exercise_id = -1
	    #Active exercise flag 
	    self.flag = -1
	    #Lists to store x and y coordinates of pink and green objects
	    self.record_green_x = []
	    self.record_green_y = []
	    self.record_pink_x = []
	    self.record_pink_y = []
	    self.repetition = 0 
	    #To keep record of progress in intensity gradually as tolerated for each excercise
	    self.repetition_green_1 = []
	    self.repetition_pink_1 = []
	    self.repetition_green_2 = []
	    self.repetition_pink_2 = []
	    self.repetition_green_3 = []
	    self.repetition_pink_3 = []
	    #Feedback messages
	    self.msg1 = ""
	    self.msg2 = ""

	    self.x_green_1 = [220.0, 212.0, 204.0, 197.0, 188.0, 178.0, 172.0, 163.0, 157.0, 148.0, 139.0, 131.0, 124.0, 119.0, 114.0, 108.0, 103.0, 100.0, 98.0, 97.0, 97.0, 98.0, 99.0, 100.0, 102.0, 105.0, 108.0, 112.0, 114.0, 118.0, 123.0, 128.0, 136.0, 140.0, 145.0, 152.0, 158.0, 169.0, 178.0, 190.0, 198.0, 208.0, 216.0, 222.0, 230.0, 237.0, 241.0, 245.0, 246.0, 235.0, 222.0, 206.0, 193.0, 183.0, 176.0, 167.0, 161.0, 155.0, 148.0, 137.0, 133.0, 126.0, 119.0, 113.0, 109.0, 105.0, 101.0, 99.0, 96.0, 95.0, 94.0, 94.0, 95.0, 97.0, 100.0, 103.0, 109.0, 117.0, 123.0, 133.0, 143.0, 151.0, 161.0, 168.0, 176.0, 186.0, 195.0, 203.0, 210.0, 216.0, 221.0, 228.0, 233.0, 237.0, 235.0, 228.0, 215.0, 208.0, 196.0, 185.0, 177.0, 169.0, 162.0, 154.0, 147.0, 140.0, 133.0, 129.0, 124.0, 120.0, 116.0, 112.0, 110.0, 108.0, 105.0, 104.0, 102.0, 101.0, 101.0, 101.0, 102.0, 103.0, 105.0, 108.0, 110.0, 114.0, 117.0, 121.0, 124.0, 128.0, 134.0, 139.0, 146.0, 151.0, 156.0, 162.0, 172.0, 180.0, 191.0, 198.0, 203.0, 209.0, 214.0, 224.0, 232.0, 240.0, 248.0, 251.0, 253.0, 251.0, 241.0, 231.0, 215.0, 205.0, 192.0, 181.0, 170.0, 160.0, 151.0, 146.0, 137.0, 131.0, 124.0, 116.0, 108.0, 104.0, 101.0, 100.0, 99.0, 99.0, 99.0, 99.0, 102.0, 105.0, 109.0, 114.0, 121.0, 127.0, 132.0, 138.0, 146.0, 153.0, 161.0, 171.0, 179.0, 185.0, 193.0, 199.0, 205.0, 211.0, 214.0, 215.0, 217.0, 227.0, 231.0, 233.0, 232.0, 227.0, 221.0, 216.0, 208.0, 200.0, 192.0, 185.0, 179.0, 173.0, 166.0, 159.0, 151.0, 141.0, 133.0, 128.0, 123.0, 120.0, 114.0, 112.0, 109.0, 107.0, 106.0, 105.0, 105.0, 105.0, 105.0, 108.0, 110.0, 114.0, 117.0, 120.0, 125.0, 130.0, 136.0, 143.0, 150.0, 156.0, 162.0, 168.0, 176.0, 182.0, 191.0, 198.0, 203.0, 210.0, 217.0, 224.0, 230.0, 235.0, 239.0, 242.0, 246.0, 244.0, 237.0, 221.0, 209.0, 198.0, 184.0, 172.0, 163.0, 154.0, 144.0, 134.0, 125.0, 120.0, 113.0, 107.0, 101.0, 98.0, 96.0, 95.0, 94.0, 95.0, 96.0, 98.0, 101.0, 103.0, 108.0, 112.0, 118.0, 123.0, 129.0, 135.0, 143.0, 153.0, 162.0, 168.0, 176.0, 183.0, 194.0, 200.0, 206.0, 212.0, 217.0, 222.0, 227.0, 231.0, 235.0, 239.0, 241.0, 236.0, 227.0, 220.0, 211.0, 200.0, 192.0, 183.0, 175.0, 164.0, 156.0, 146.0, 140.0, 134.0, 130.0, 124.0, 119.0, 114.0, 110.0, 109.0, 107.0, 106.0, 106.0, 106.0, 108.0, 110.0, 112.0, 114.0, 117.0, 121.0, 124.0, 127.0, 131.0, 137.0, 141.0, 147.0, 153.0, 159.0, 166.0, 171.0, 181.0, 190.0, 195.0, 202.0, 209.0, 218.0, 224.0, 231.0, 237.0, 243.0, 244.0, 241.0, 231.0, 226.0, 215.0, 207.0, 200.0, 191.0, 180.0, 171.0, 164.0, 157.0, 148.0, 141.0, 133.0, 125.0, 121.0, 117.0, 114.0, 109.0, 105.0, 102.0, 99.0, 98.0, 97.0, 97.0, 98.0, 101.0, 103.0, 107.0, 111.0, 117.0, 123.0, 128.0, 135.0, 144.0, 152.0]
	    
	    self.y_green_1 = [395.0, 392.0, 388.0, 384.0, 379.0, 373.0, 368.0, 360.0, 355.0, 346.0, 335.0, 325.0, 315.0, 304.0, 294.0, 279.0, 264.0, 253.0, 240.0, 227.0, 216.0, 207.0, 194.0, 183.0, 170.0, 156.0, 146.0, 136.0, 130.0, 122.0, 112.0, 101.0, 88.0, 82.0, 75.0, 68.0, 61.0, 52.0, 44.0, 36.0, 31.0, 27.0, 24.0, 21.0, 18.0, 16.0, 14.0, 14.0, 14.0, 16.0, 20.0, 27.0, 34.0, 40.0, 45.0, 52.0, 57.0, 64.0, 71.0, 85.0, 90.0, 100.0, 111.0, 121.0, 131.0, 144.0, 154.0, 165.0, 180.0, 195.0, 210.0, 218.0, 230.0, 244.0, 257.0, 271.0, 285.0, 301.0, 311.0, 324.0, 336.0, 344.0, 353.0, 359.0, 364.0, 370.0, 375.0, 379.0, 383.0, 387.0, 390.0, 394.0, 395.0, 396.0, 396.0, 394.0, 389.0, 386.0, 379.0, 373.0, 366.0, 358.0, 352.0, 345.0, 337.0, 330.0, 320.0, 313.0, 302.0, 294.0, 284.0, 272.0, 264.0, 253.0, 243.0, 234.0, 225.0, 219.0, 209.0, 199.0, 188.0, 180.0, 172.0, 161.0, 152.0, 139.0, 130.0, 121.0, 114.0, 106.0, 96.0, 89.0, 79.0, 73.0, 67.0, 60.0, 51.0, 45.0, 37.0, 33.0, 31.0, 28.0, 25.0, 21.0, 18.0, 16.0, 14.0, 14.0, 14.0, 14.0, 16.0, 18.0, 25.0, 30.0, 38.0, 45.0, 53.0, 63.0, 72.0, 79.0, 89.0, 98.0, 110.0, 126.0, 144.0, 161.0, 175.0, 185.0, 200.0, 211.0, 225.0, 236.0, 251.0, 263.0, 278.0, 291.0, 305.0, 315.0, 324.0, 332.0, 342.0, 349.0, 356.0, 364.0, 370.0, 373.0, 378.0, 382.0, 385.0, 388.0, 390.0, 391.0, 392.0, 396.0, 397.0, 398.0, 398.0, 396.0, 394.0, 391.0, 387.0, 383.0, 378.0, 374.0, 369.0, 364.0, 357.0, 351.0, 342.0, 328.0, 316.0, 307.0, 298.0, 292.0, 279.0, 273.0, 261.0, 253.0, 240.0, 230.0, 220.0, 209.0, 195.0, 180.0, 169.0, 157.0, 147.0, 137.0, 121.0, 108.0, 97.0, 85.0, 75.0, 68.0, 62.0, 56.0, 49.0, 44.0, 37.0, 33.0, 30.0, 26.0, 23.0, 20.0, 18.0, 17.0, 16.0, 15.0, 15.0, 15.0, 16.0, 21.0, 26.0, 32.0, 40.0, 49.0, 56.0, 64.0, 75.0, 86.0, 99.0, 110.0, 123.0, 136.0, 155.0, 170.0, 181.0, 197.0, 210.0, 224.0, 234.0, 241.0, 252.0, 261.0, 274.0, 286.0, 297.0, 306.0, 316.0, 324.0, 334.0, 345.0, 354.0, 360.0, 367.0, 372.0, 380.0, 383.0, 386.0, 390.0, 392.0, 395.0, 397.0, 398.0, 399.0, 400.0, 401.0, 398.0, 395.0, 392.0, 388.0, 382.0, 377.0, 370.0, 364.0, 354.0, 344.0, 332.0, 324.0, 312.0, 305.0, 295.0, 284.0, 273.0, 258.0, 248.0, 235.0, 222.0, 211.0, 198.0, 184.0, 173.0, 163.0, 153.0, 145.0, 133.0, 126.0, 117.0, 108.0, 98.0, 93.0, 84.0, 77.0, 69.0, 60.0, 54.0, 45.0, 39.0, 36.0, 32.0, 29.0, 24.0, 21.0, 18.0, 16.0, 15.0, 15.0, 16.0, 18.0, 21.0, 25.0, 29.0, 33.0, 38.0, 45.0, 52.0, 58.0, 64.0, 74.0, 83.0, 93.0, 105.0, 112.0, 120.0, 129.0, 140.0, 154.0, 167.0, 179.0, 191.0, 205.0, 220.0, 232.0, 249.0, 257.0, 272.0, 285.0, 298.0, 308.0, 316.0, 325.0, 336.0, 344.0]

	    self.x_pink_1 = [400.0, 402.0, 408.0, 417.0, 428.0, 440.0, 455.0, 464.0, 477.0, 484.0, 494.0, 504.0, 513.0, 520.0, 527.0, 532.0, 538.0, 543.0, 546.0, 548.0, 549.0, 549.0, 550.0, 550.0, 550.0, 548.0, 546.0, 545.0, 542.0, 539.0, 535.0, 530.0, 525.0, 519.0, 514.0, 505.0, 494.0, 485.0, 473.0, 464.0, 449.0, 433.0, 414.0, 399.0, 388.0, 374.0, 362.0, 352.0, 344.0, 339.0, 350.0, 366.0, 388.0, 408.0, 422.0, 430.0, 443.0, 453.0, 462.0, 472.0, 488.0, 493.0, 502.0, 511.0, 519.0, 526.0, 534.0, 540.0, 545.0, 550.0, 553.0, 555.0, 555.0, 555.0, 554.0, 553.0, 550.0, 545.0, 540.0, 534.0, 525.0, 513.0, 504.0, 490.0, 481.0, 473.0, 462.0, 452.0, 440.0, 431.0, 423.0, 417.0, 404.0, 398.0, 397.0, 400.0, 409.0, 424.0, 433.0, 446.0, 457.0, 467.0, 478.0, 488.0, 497.0, 506.0, 512.0, 520.0, 525.0, 532.0, 537.0, 542.0, 546.0, 548.0, 550.0, 552.0, 552.0, 552.0, 552.0, 551.0, 550.0, 549.0, 548.0, 547.0, 545.0, 543.0, 539.0, 535.0, 531.0, 527.0, 523.0, 516.0, 510.0, 499.0, 489.0, 479.0, 470.0, 458.0, 448.0, 434.0, 423.0, 413.0, 399.0, 389.0, 379.0, 373.0, 367.0, 361.0, 352.0, 345.0, 343.0, 355.0, 371.0, 394.0, 412.0, 431.0, 444.0, 456.0, 469.0, 482.0, 489.0, 501.0, 510.0, 519.0, 527.0, 534.0, 541.0, 547.0, 551.0, 554.0, 555.0, 556.0, 556.0, 554.0, 553.0, 550.0, 546.0, 540.0, 536.0, 531.0, 526.0, 517.0, 510.0, 503.0, 494.0, 485.0, 477.0, 463.0, 454.0, 445.0, 436.0, 429.0, 422.0, 414.0, 406.0, 402.0, 397.0, 399.0, 407.0, 413.0, 422.0, 432.0, 441.0, 453.0, 460.0, 467.0, 474.0, 482.0, 490.0, 499.0, 509.0, 519.0, 526.0, 532.0, 536.0, 542.0, 543.0, 545.0, 547.0, 548.0, 550.0, 550.0, 550.0, 549.0, 547.0, 545.0, 542.0, 538.0, 533.0, 527.0, 520.0, 514.0, 505.0, 496.0, 489.0, 481.0, 473.0, 464.0, 457.0, 443.0, 430.0, 420.0, 405.0, 395.0, 385.0, 376.0, 367.0, 359.0, 350.0, 343.0, 344.0, 352.0, 370.0, 386.0, 402.0, 419.0, 434.0, 447.0, 461.0, 478.0, 491.0, 502.0, 510.0, 520.0, 529.0, 538.0, 543.0, 545.0, 549.0, 551.0, 552.0, 553.0, 553.0, 552.0, 551.0, 548.0, 544.0, 540.0, 535.0, 529.0, 524.0, 517.0, 509.0, 499.0, 492.0, 484.0, 477.0, 464.0, 456.0, 448.0, 438.0, 429.0, 418.0, 410.0, 405.0, 397.0, 391.0, 391.0, 399.0, 410.0, 420.0, 431.0, 442.0, 453.0, 467.0, 476.0, 489.0, 499.0, 509.0, 515.0, 522.0, 527.0, 534.0, 539.0, 543.0, 547.0, 548.0, 550.0, 552.0, 552.0, 551.0, 551.0, 549.0, 547.0, 544.0, 541.0, 537.0, 534.0, 529.0, 525.0, 518.0, 514.0, 507.0, 500.0, 493.0, 483.0, 474.0, 460.0, 445.0, 435.0, 418.0, 401.0, 385.0, 373.0, 364.0, 355.0, 345.0, 342.0, 344.0, 356.0, 363.0, 377.0, 388.0, 396.0, 408.0, 422.0, 436.0, 448.0, 459.0, 473.0, 484.0, 497.0, 509.0, 517.0, 525.0, 533.0, 540.0, 546.0, 549.0, 553.0, 556.0, 557.0, 558.0, 558.0, 556.0, 555.0, 552.0, 548.0, 544.0, 541.0, 537.0, 530.0, 518.0, 509.0]

	    self.y_pink_1 = [403.0, 403.0, 401.0, 398.0, 395.0, 389.0, 383.0, 378.0, 368.0, 361.0, 351.0, 340.0, 330.0, 319.0, 308.0, 298.0, 282.0, 267.0, 255.0, 242.0, 231.0, 220.0, 209.0, 197.0, 187.0, 176.0, 163.0, 154.0, 143.0, 135.0, 122.0, 111.0, 102.0, 90.0, 82.0, 71.0, 59.0, 51.0, 41.0, 34.0, 25.0, 19.0, 14.0, 12.0, 11.0, 10.0, 10.0, 10.0, 10.0, 10.0, 9.0, 10.0, 11.0, 13.0, 15.0, 17.0, 21.0, 26.0, 32.0, 40.0, 53.0, 58.0, 68.0, 78.0, 89.0, 100.0, 113.0, 127.0, 140.0, 156.0, 171.0, 185.0, 193.0, 205.0, 222.0, 236.0, 252.0, 268.0, 284.0, 295.0, 312.0, 331.0, 343.0, 357.0, 363.0, 369.0, 375.0, 382.0, 389.0, 393.0, 397.0, 400.0, 404.0, 405.0, 406.0, 405.0, 403.0, 399.0, 395.0, 389.0, 382.0, 376.0, 367.0, 359.0, 350.0, 340.0, 331.0, 320.0, 311.0, 297.0, 287.0, 277.0, 264.0, 253.0, 239.0, 225.0, 213.0, 202.0, 196.0, 186.0, 176.0, 167.0, 161.0, 155.0, 146.0, 138.0, 126.0, 116.0, 107.0, 98.0, 90.0, 80.0, 71.0, 58.0, 48.0, 40.0, 33.0, 26.0, 21.0, 17.0, 15.0, 14.0, 12.0, 11.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 10.0, 11.0, 12.0, 14.0, 17.0, 21.0, 28.0, 36.0, 46.0, 52.0, 64.0, 74.0, 85.0, 97.0, 111.0, 129.0, 145.0, 158.0, 176.0, 187.0, 202.0, 212.0, 224.0, 232.0, 246.0, 261.0, 277.0, 288.0, 298.0, 308.0, 321.0, 330.0, 340.0, 350.0, 357.0, 364.0, 374.0, 380.0, 385.0, 389.0, 393.0, 397.0, 400.0, 403.0, 404.0, 406.0, 405.0, 404.0, 403.0, 400.0, 396.0, 392.0, 386.0, 381.0, 376.0, 370.0, 363.0, 356.0, 347.0, 335.0, 322.0, 311.0, 298.0, 287.0, 272.0, 264.0, 253.0, 244.0, 231.0, 218.0, 206.0, 193.0, 177.0, 164.0, 155.0, 143.0, 131.0, 120.0, 107.0, 95.0, 84.0, 71.0, 61.0, 53.0, 46.0, 39.0, 32.0, 28.0, 20.0, 16.0, 14.0, 12.0, 11.0, 10.0, 10.0, 10.0, 10.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 12.0, 13.0, 16.0, 20.0, 28.0, 40.0, 51.0, 63.0, 74.0, 88.0, 102.0, 121.0, 134.0, 143.0, 155.0, 166.0, 179.0, 191.0, 199.0, 216.0, 230.0, 247.0, 262.0, 275.0, 287.0, 301.0, 310.0, 322.0, 334.0, 345.0, 353.0, 360.0, 366.0, 376.0, 382.0, 387.0, 392.0, 397.0, 401.0, 404.0, 406.0, 405.0, 400.0, 398.0, 405.0, 404.0, 401.0, 397.0, 392.0, 386.0, 377.0, 370.0, 360.0, 349.0, 337.0, 328.0, 317.0, 308.0, 295.0, 282.0, 268.0, 254.0, 245.0, 232.0, 218.0, 206.0, 193.0, 179.0, 167.0, 156.0, 146.0, 138.0, 126.0, 119.0, 110.0, 101.0, 88.0, 82.0, 71.0, 63.0, 54.0, 45.0, 38.0, 28.0, 19.0, 16.0, 13.0, 10.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 10.0, 12.0, 15.0, 18.0, 22.0, 32.0, 41.0, 53.0, 67.0, 78.0, 89.0, 101.0, 116.0, 131.0, 144.0, 158.0, 172.0, 185.0, 200.0, 213.0, 233.0, 240.0, 254.0, 265.0, 277.0, 285.0, 294.0, 309.0, 326.0, 337.0]
	    
	    

	    self.x_green_2 = [100.0, 103.0, 106.0, 111.0, 118.0, 127.0, 135.0, 142.0, 150.0, 160.0, 165.0, 170.0, 176.0, 183.0, 193.0, 201.0, 207.0, 211.0, 213.0, 215.0, 214.0, 209.0, 203.0, 194.0, 187.0, 179.0, 173.0, 165.0, 158.0, 151.0, 145.0, 138.0, 131.0, 126.0, 121.0, 117.0, 111.0, 108.0, 105.0, 103.0, 102.0, 100.0, 99.0, 98.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 96.0, 96.0, 96.0, 96.0, 96.0, 97.0, 98.0, 100.0, 104.0, 110.0, 120.0, 127.0, 139.0, 147.0, 156.0, 166.0, 174.0, 178.0, 181.0, 184.0, 187.0, 190.0, 196.0, 205.0, 210.0, 214.0, 213.0, 211.0, 204.0, 193.0, 183.0, 170.0, 160.0, 152.0, 145.0, 137.0, 132.0, 127.0, 121.0, 118.0, 115.0, 111.0, 108.0, 106.0, 104.0, 102.0, 100.0, 100.0, 99.0, 99.0, 99.0, 99.0, 99.0, 99.0, 99.0, 99.0, 98.0, 98.0, 99.0, 100.0, 103.0, 108.0, 113.0, 121.0, 126.0, 134.0, 140.0, 148.0, 156.0, 162.0, 166.0, 174.0, 179.0, 188.0, 195.0, 203.0, 211.0, 217.0, 222.0, 220.0, 216.0, 210.0, 203.0, 191.0, 178.0, 167.0, 159.0, 148.0, 143.0, 138.0, 132.0, 126.0, 120.0, 115.0, 112.0, 108.0, 104.0, 103.0, 101.0, 99.0, 98.0, 98.0, 99.0, 98.0, 98.0, 98.0, 98.0, 98.0, 99.0, 100.0, 102.0, 104.0, 107.0, 109.0, 114.0, 118.0, 123.0, 128.0, 134.0, 138.0, 144.0, 147.0, 151.0, 156.0, 161.0, 166.0, 171.0, 176.0, 183.0, 188.0, 193.0, 197.0, 198.0, 196.0, 193.0, 189.0, 183.0, 172.0, 161.0, 156.0, 150.0, 145.0, 138.0, 133.0, 127.0, 121.0, 116.0, 112.0, 110.0, 108.0, 107.0, 104.0, 102.0, 101.0, 100.0, 98.0, 98.0, 97.0, 97.0, 97.0, 97.0, 96.0, 96.0, 96.0, 96.0, 97.0, 99.0, 101.0, 105.0, 110.0, 118.0, 123.0, 132.0, 142.0, 151.0, 157.0, 163.0, 168.0, 174.0, 181.0, 187.0, 195.0, 200.0, 206.0, 208.0, 205.0, 202.0, 197.0, 189.0, 182.0, 174.0, 167.0, 156.0, 146.0, 138.0, 130.0, 121.0, 116.0, 111.0, 107.0, 104.0, 102.0, 99.0, 97.0, 96.0, 95.0, 95.0, 95.0, 95.0, 95.0, 95.0, 95.0, 95.0, 94.0, 94.0, 95.0, 96.0, 97.0, 99.0, 103.0, 107.0, 110.0, 117.0, 122.0, 126.0, 133.0, 137.0, 143.0, 148.0, 154.0, 159.0, 164.0, 175.0, 183.0, 191.0, 196.0, 203.0, 205.0, 204.0, 198.0, 188.0, 178.0, 171.0, 163.0, 156.0, 149.0, 143.0, 137.0, 131.0, 126.0, 120.0, 115.0, 109.0, 106.0, 104.0, 102.0, 99.0, 98.0, 95.0, 94.0, 93.0, 93.0, 93.0, 93.0, 93.0, 93.0, 93.0, 93.0, 93.0, 95.0, 97.0, 100.0, 103.0, 106.0, 110.0, 115.0, 124.0, 129.0, 141.0, 150.0, 157.0, 166.0, 175.0, 181.0, 188.0, 196.0, 203.0, 210.0, 215.0, 216.0, 215.0, 210.0, 204.0, 194.0, 187.0, 179.0, 170.0, 163.0, 157.0, 151.0, 148.0, 141.0, 131.0, 127.0, 121.0, 117.0, 112.0, 108.0, 106.0, 103.0, 101.0, 99.0, 97.0, 95.0, 94.0, 94.0, 93.0, 92.0, 92.0, 92.0, 92.0, 92.0, 93.0, 94.0, 97.0, 99.0, 102.0, 106.0, 111.0, 118.0]
	    
	    self.y_green_2 = [168.0, 161.0, 154.0, 146.0, 136.0, 129.0, 124.0, 120.0, 117.0, 113.0, 113.0, 113.0, 112.0, 112.0, 113.0, 114.0, 115.0, 117.0, 117.0, 118.0, 118.0, 116.0, 115.0, 114.0, 114.0, 114.0, 115.0, 116.0, 118.0, 121.0, 124.0, 127.0, 133.0, 136.0, 140.0, 145.0, 151.0, 157.0, 163.0, 168.0, 172.0, 176.0, 179.0, 186.0, 190.0, 196.0, 200.0, 203.0, 207.0, 208.0, 208.0, 207.0, 207.0, 206.0, 205.0, 202.0, 196.0, 184.0, 177.0, 168.0, 159.0, 147.0, 135.0, 128.0, 119.0, 114.0, 110.0, 107.0, 105.0, 103.0, 103.0, 101.0, 101.0, 101.0, 102.0, 104.0, 105.0, 107.0, 108.0, 107.0, 106.0, 104.0, 104.0, 105.0, 107.0, 111.0, 114.0, 119.0, 123.0, 127.0, 133.0, 137.0, 142.0, 148.0, 154.0, 159.0, 165.0, 172.0, 179.0, 185.0, 189.0, 192.0, 196.0, 199.0, 202.0, 205.0, 206.0, 206.0, 202.0, 197.0, 191.0, 184.0, 169.0, 159.0, 151.0, 142.0, 137.0, 131.0, 127.0, 123.0, 120.0, 118.0, 117.0, 116.0, 115.0, 115.0, 116.0, 116.0, 118.0, 120.0, 121.0, 121.0, 119.0, 117.0, 116.0, 114.0, 114.0, 115.0, 117.0, 120.0, 122.0, 125.0, 129.0, 134.0, 140.0, 146.0, 151.0, 158.0, 166.0, 171.0, 178.0, 184.0, 193.0, 198.0, 203.0, 205.0, 208.0, 207.0, 206.0, 201.0, 192.0, 183.0, 175.0, 170.0, 163.0, 158.0, 152.0, 146.0, 141.0, 135.0, 131.0, 128.0, 125.0, 123.0, 121.0, 119.0, 118.0, 116.0, 115.0, 114.0, 113.0, 114.0, 114.0, 115.0, 115.0, 115.0, 115.0, 115.0, 115.0, 116.0, 118.0, 120.0, 123.0, 125.0, 130.0, 133.0, 139.0, 144.0, 149.0, 155.0, 159.0, 162.0, 165.0, 171.0, 178.0, 184.0, 188.0, 194.0, 200.0, 206.0, 213.0, 216.0, 217.0, 215.0, 213.0, 206.0, 198.0, 191.0, 183.0, 175.0, 165.0, 158.0, 148.0, 143.0, 136.0, 130.0, 126.0, 123.0, 120.0, 119.0, 118.0, 117.0, 117.0, 117.0, 118.0, 119.0, 120.0, 119.0, 119.0, 119.0, 119.0, 119.0, 119.0, 120.0, 123.0, 127.0, 131.0, 135.0, 142.0, 148.0, 153.0, 160.0, 165.0, 171.0, 179.0, 186.0, 194.0, 201.0, 208.0, 215.0, 219.0, 221.0, 222.0, 223.0, 221.0, 213.0, 207.0, 198.0, 191.0, 185.0, 178.0, 170.0, 163.0, 157.0, 147.0, 141.0, 136.0, 130.0, 126.0, 124.0, 122.0, 120.0, 119.0, 118.0, 117.0, 116.0, 117.0, 118.0, 119.0, 119.0, 119.0, 119.0, 118.0, 118.0, 119.0, 120.0, 122.0, 125.0, 127.0, 131.0, 135.0, 138.0, 144.0, 150.0, 158.0, 162.0, 166.0, 170.0, 176.0, 180.0, 188.0, 193.0, 197.0, 203.0, 207.0, 214.0, 216.0, 215.0, 213.0, 208.0, 200.0, 191.0, 179.0, 171.0, 165.0, 159.0, 153.0, 147.0, 139.0, 134.0, 128.0, 123.0, 121.0, 119.0, 117.0, 116.0, 116.0, 117.0, 117.0, 118.0, 119.0, 120.0, 120.0, 119.0, 118.0, 117.0, 117.0, 117.0, 118.0, 119.0, 121.0, 123.0, 125.0, 128.0, 135.0, 138.0, 144.0, 149.0, 154.0, 159.0, 163.0, 167.0, 172.0, 178.0, 184.0, 190.0, 195.0, 199.0, 204.0, 209.0, 213.0, 213.0, 211.0, 208.0, 201.0, 195.0, 184.0, 177.0, 170.0, 162.0, 155.0, 147.0]

	    self.x_pink_2 = [536.0, 531.0, 525.0, 517.0, 507.0, 493.0, 483.0, 478.0, 473.0, 462.0, 455.0, 447.0, 440.0, 432.0, 423.0, 416.0, 410.0, 404.0, 402.0, 398.0, 400.0, 404.0, 410.0, 420.0, 429.0, 438.0, 447.0, 454.0, 464.0, 471.0, 479.0, 488.0, 499.0, 505.0, 511.0, 518.0, 526.0, 531.0, 536.0, 540.0, 542.0, 544.0, 546.0, 547.0, 548.0, 550.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 547.0, 546.0, 543.0, 537.0, 527.0, 515.0, 507.0, 495.0, 486.0, 476.0, 466.0, 457.0, 451.0, 449.0, 447.0, 443.0, 438.0, 433.0, 428.0, 421.0, 415.0, 413.0, 415.0, 421.0, 434.0, 446.0, 459.0, 469.0, 478.0, 484.0, 494.0, 499.0, 505.0, 512.0, 516.0, 521.0, 526.0, 530.0, 533.0, 538.0, 542.0, 544.0, 546.0, 547.0, 548.0, 549.0, 550.0, 550.0, 550.0, 550.0, 550.0, 550.0, 550.0, 548.0, 545.0, 537.0, 531.0, 524.0, 516.0, 511.0, 501.0, 494.0, 485.0, 475.0, 468.0, 463.0, 456.0, 451.0, 444.0, 437.0, 431.0, 421.0, 413.0, 406.0, 407.0, 409.0, 416.0, 424.0, 436.0, 449.0, 459.0, 466.0, 479.0, 485.0, 492.0, 501.0, 508.0, 516.0, 528.0, 533.0, 539.0, 543.0, 545.0, 548.0, 549.0, 550.0, 550.0, 550.0, 550.0, 550.0, 550.0, 550.0, 550.0, 550.0, 549.0, 547.0, 544.0, 539.0, 535.0, 529.0, 524.0, 517.0, 507.0, 498.0, 492.0, 485.0, 483.0, 479.0, 473.0, 469.0, 463.0, 458.0, 453.0, 446.0, 439.0, 432.0, 425.0, 423.0, 423.0, 426.0, 431.0, 439.0, 453.0, 466.0, 472.0, 479.0, 485.0, 492.0, 497.0, 505.0, 512.0, 518.0, 524.0, 528.0, 533.0, 535.0, 539.0, 541.0, 543.0, 545.0, 546.0, 548.0, 549.0, 550.0, 550.0, 550.0, 550.0, 550.0, 549.0, 547.0, 545.0, 541.0, 536.0, 531.0, 525.0, 515.0, 509.0, 500.0, 488.0, 478.0, 471.0, 464.0, 458.0, 451.0, 445.0, 438.0, 428.0, 421.0, 415.0, 412.0, 414.0, 417.0, 423.0, 432.0, 440.0, 451.0, 459.0, 472.0, 484.0, 495.0, 508.0, 521.0, 529.0, 535.0, 541.0, 544.0, 546.0, 547.0, 548.0, 550.0, 551.0, 552.0, 552.0, 552.0, 552.0, 551.0, 552.0, 552.0, 553.0, 553.0, 551.0, 550.0, 548.0, 545.0, 540.0, 535.0, 531.0, 524.0, 517.0, 511.0, 500.0, 493.0, 484.0, 476.0, 466.0, 459.0, 453.0, 441.0, 433.0, 424.0, 417.0, 413.0, 409.0, 411.0, 416.0, 424.0, 435.0, 446.0, 456.0, 465.0, 474.0, 484.0, 494.0, 505.0, 512.0, 521.0, 527.0, 534.0, 539.0, 543.0, 547.0, 550.0, 551.0, 553.0, 554.0, 554.0, 554.0, 555.0, 554.0, 554.0, 555.0, 554.0, 555.0, 555.0, 554.0, 550.0, 545.0, 540.0, 535.0, 529.0, 523.0, 514.0, 508.0, 495.0, 484.0, 476.0, 467.0, 459.0, 451.0, 443.0, 434.0, 427.0, 418.0, 413.0, 411.0, 411.0, 415.0, 421.0, 430.0, 439.0, 449.0, 460.0, 467.0, 474.0, 481.0, 486.0, 494.0, 507.0, 513.0, 522.0, 528.0, 533.0, 537.0, 540.0, 544.0, 547.0, 549.0, 551.0, 552.0, 553.0, 553.0, 554.0, 554.0, 554.0, 554.0, 554.0, 554.0, 553.0, 551.0, 546.0, 542.0, 537.0, 531.0, 524.0, 518.0]	
	    
	    self.y_pink_2 = [155.0, 145.0, 136.0, 127.0, 118.0, 111.0, 105.0, 104.0, 103.0, 101.0, 100.0, 100.0, 99.0, 100.0, 102.0, 104.0, 106.0, 108.0, 109.0, 110.0, 108.0, 106.0, 104.0, 101.0, 99.0, 98.0, 98.0, 98.0, 99.0, 100.0, 102.0, 104.0, 109.0, 112.0, 116.0, 121.0, 129.0, 135.0, 144.0, 152.0, 156.0, 160.0, 164.0, 170.0, 174.0, 182.0, 190.0, 196.0, 198.0, 198.0, 197.0, 196.0, 196.0, 195.0, 193.0, 191.0, 185.0, 171.0, 164.0, 155.0, 145.0, 133.0, 122.0, 117.0, 111.0, 108.0, 104.0, 102.0, 100.0, 99.0, 98.0, 97.0, 96.0, 96.0, 97.0, 98.0, 99.0, 101.0, 102.0, 101.0, 99.0, 98.0, 97.0, 97.0, 99.0, 100.0, 102.0, 105.0, 108.0, 111.0, 117.0, 120.0, 125.0, 130.0, 136.0, 141.0, 148.0, 156.0, 163.0, 169.0, 173.0, 178.0, 184.0, 189.0, 191.0, 195.0, 198.0, 197.0, 193.0, 185.0, 176.0, 165.0, 150.0, 140.0, 132.0, 126.0, 122.0, 117.0, 113.0, 109.0, 107.0, 106.0, 105.0, 105.0, 104.0, 105.0, 105.0, 106.0, 109.0, 111.0, 114.0, 113.0, 112.0, 110.0, 108.0, 106.0, 104.0, 104.0, 104.0, 106.0, 107.0, 109.0, 112.0, 116.0, 121.0, 131.0, 138.0, 147.0, 156.0, 163.0, 169.0, 175.0, 182.0, 186.0, 189.0, 190.0, 191.0, 193.0, 194.0, 191.0, 184.0, 177.0, 167.0, 161.0, 150.0, 144.0, 136.0, 131.0, 124.0, 118.0, 113.0, 110.0, 108.0, 107.0, 106.0, 105.0, 105.0, 104.0, 103.0, 103.0, 103.0, 103.0, 104.0, 105.0, 105.0, 106.0, 105.0, 104.0, 103.0, 103.0, 104.0, 105.0, 107.0, 109.0, 111.0, 113.0, 116.0, 120.0, 125.0, 130.0, 135.0, 142.0, 146.0, 152.0, 158.0, 163.0, 166.0, 171.0, 176.0, 182.0, 192.0, 196.0, 199.0, 199.0, 197.0, 187.0, 176.0, 166.0, 155.0, 147.0, 140.0, 133.0, 124.0, 120.0, 114.0, 108.0, 106.0, 104.0, 103.0, 102.0, 102.0, 102.0, 103.0, 104.0, 106.0, 109.0, 109.0, 108.0, 107.0, 106.0, 105.0, 104.0, 103.0, 104.0, 106.0, 108.0, 111.0, 117.0, 126.0, 133.0, 140.0, 149.0, 157.0, 164.0, 169.0, 175.0, 181.0, 189.0, 198.0, 205.0, 212.0, 215.0, 215.0, 215.0, 213.0, 205.0, 199.0, 188.0, 180.0, 175.0, 167.0, 155.0, 147.0, 142.0, 133.0, 127.0, 123.0, 116.0, 112.0, 109.0, 106.0, 103.0, 102.0, 102.0, 103.0, 103.0, 104.0, 106.0, 108.0, 109.0, 109.0, 108.0, 107.0, 105.0, 104.0, 104.0, 105.0, 106.0, 109.0, 112.0, 117.0, 121.0, 126.0, 132.0, 140.0, 147.0, 154.0, 160.0, 169.0, 175.0, 182.0, 188.0, 194.0, 200.0, 206.0, 210.0, 213.0, 213.0, 210.0, 205.0, 198.0, 188.0, 172.0, 160.0, 152.0, 144.0, 137.0, 131.0, 125.0, 121.0, 114.0, 110.0, 108.0, 107.0, 106.0, 106.0, 106.0, 106.0, 108.0, 109.0, 110.0, 110.0, 111.0, 109.0, 108.0, 106.0, 105.0, 104.0, 104.0, 105.0, 107.0, 108.0, 110.0, 113.0, 119.0, 123.0, 130.0, 135.0, 140.0, 146.0, 150.0, 156.0, 163.0, 170.0, 176.0, 183.0, 191.0, 196.0, 202.0, 207.0, 211.0, 209.0, 207.0, 203.0, 193.0, 183.0, 168.0, 159.0, 151.0, 143.0, 136.0, 130.0]
	    
	   

	    self.x_green_3 = [249.0, 249.0, 249.0, 249.0, 249.0, 249.0, 249.0, 249.0, 249.0, 250.0, 250.0, 249.0, 249.0, 249.0, 249.0, 249.0, 248.0, 246.0, 246.0, 245.0, 244.0, 243.0, 241.0, 241.0, 242.0, 242.0, 243.0, 242.0, 241.0, 241.0, 241.0, 242.0, 243.0, 243.0, 242.0, 242.0, 243.0, 242.0, 239.0, 239.0, 242.0, 244.0, 246.0, 249.0, 249.0, 247.0, 245.0, 244.0, 244.0, 244.0, 241.0, 240.0, 241.0, 242.0, 243.0, 243.0, 243.0, 242.0, 244.0, 244.0, 244.0, 244.0, 242.0, 242.0, 244.0, 245.0, 245.0, 244.0, 245.0, 245.0, 245.0, 247.0, 250.0, 250.0, 250.0, 250.0, 250.0, 251.0, 251.0, 250.0, 250.0, 250.0, 249.0, 248.0, 247.0, 247.0, 247.0, 248.0, 247.0, 247.0, 248.0, 248.0, 248.0, 247.0, 246.0, 246.0, 244.0, 243.0, 242.0, 241.0, 241.0, 241.0, 242.0, 243.0, 244.0, 245.0, 245.0, 246.0, 247.0, 249.0, 249.0, 247.0, 244.0, 241.0, 241.0, 241.0, 241.0, 240.0, 241.0, 243.0, 248.0, 250.0, 250.0, 249.0, 249.0, 250.0, 251.0, 250.0, 251.0, 253.0, 253.0, 254.0, 253.0, 253.0, 255.0, 254.0, 255.0, 256.0, 257.0, 259.0, 259.0, 258.0, 257.0, 256.0, 255.0, 256.0, 256.0, 258.0, 258.0, 258.0, 258.0, 257.0, 256.0, 254.0, 254.0, 254.0, 254.0, 255.0, 255.0, 256.0, 257.0, 257.0, 258.0, 259.0, 260.0, 260.0, 259.0, 257.0, 256.0, 254.0, 252.0, 252.0, 251.0, 250.0, 249.0, 249.0, 247.0, 246.0, 246.0, 247.0, 245.0, 243.0, 243.0, 244.0, 246.0, 249.0, 250.0, 250.0, 250.0, 249.0, 248.0, 247.0, 249.0, 250.0, 249.0, 250.0, 250.0, 252.0, 252.0, 252.0, 253.0, 254.0, 254.0, 255.0, 256.0, 258.0, 257.0, 257.0, 257.0, 257.0, 256.0, 254.0, 255.0, 255.0, 255.0, 254.0, 254.0, 255.0, 256.0, 255.0, 255.0, 255.0, 254.0, 254.0, 254.0, 254.0, 253.0, 251.0, 250.0, 251.0, 252.0, 252.0, 253.0, 253.0, 253.0, 252.0, 251.0, 251.0, 252.0, 252.0, 251.0, 252.0, 253.0, 253.0, 252.0, 253.0, 253.0, 254.0, 252.0, 253.0, 253.0, 252.0, 252.0, 250.0, 250.0, 251.0, 251.0, 250.0, 252.0, 256.0, 263.0, 265.0, 264.0, 264.0, 264.0, 261.0, 260.0, 259.0, 258.0, 256.0, 254.0, 253.0, 254.0, 253.0, 253.0, 253.0, 253.0, 252.0, 252.0, 251.0, 249.0, 248.0, 250.0, 252.0, 253.0, 253.0, 253.0, 253.0, 253.0, 253.0, 255.0, 256.0, 257.0, 257.0, 257.0, 258.0, 257.0, 256.0, 256.0, 255.0, 255.0, 257.0, 257.0, 258.0, 258.0, 259.0, 258.0, 259.0, 258.0, 258.0, 258.0, 258.0, 258.0, 258.0, 259.0, 259.0, 259.0, 259.0, 259.0, 259.0, 259.0, 258.0, 258.0, 258.0, 259.0, 259.0, 259.0, 259.0, 258.0, 258.0, 259.0, 259.0, 259.0, 259.0, 258.0, 259.0, 259.0, 259.0, 259.0, 257.0, 256.0, 255.0, 256.0, 255.0, 254.0, 250.0, 250.0, 251.0, 250.0, 250.0, 253.0, 258.0, 263.0, 261.0, 261.0, 263.0, 263.0, 262.0, 260.0, 258.0, 257.0, 257.0, 257.0, 254.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 258.0, 259.0, 259.0, 260.0, 259.0, 259.0, 259.0, 259.0, 259.0, 259.0, 258.0, 260.0, 261.0, 261.0, 262.0, 261.0, 261.0, 261.0, 262.0, 262.0, 262.0, 260.0, 260.0, 262.0, 260.0, 260.0, 261.0, 262.0, 262.0, 263.0, 263.0, 263.0, 262.0, 263.0, 263.0, 263.0, 263.0, 263.0]

	    self.y_green_3 = [200.0, 199.0, 198.0, 196.0, 192.0, 187.0, 182.0, 175.0, 169.0, 166.0, 162.0, 157.0, 152.0, 146.0, 139.0, 132.0, 125.0, 118.0, 111.0, 105.0, 99.0, 94.0, 88.0, 83.0, 76.0, 70.0, 65.0, 58.0, 53.0, 47.0, 42.0, 36.0, 31.0, 26.0, 22.0, 20.0, 18.0, 18.0, 18.0, 19.0, 21.0, 24.0, 27.0, 32.0, 35.0, 38.0, 42.0, 46.0, 50.0, 56.0, 63.0, 68.0, 74.0, 82.0, 89.0, 95.0, 101.0, 106.0, 113.0, 119.0, 125.0, 131.0, 137.0, 143.0, 149.0, 155.0, 163.0, 169.0, 175.0, 181.0, 185.0, 190.0, 195.0, 200.0, 204.0, 206.0, 209.0, 211.0, 213.0, 213.0, 210.0, 208.0, 202.0, 197.0, 190.0, 181.0, 176.0, 169.0, 162.0, 158.0, 151.0, 143.0, 136.0, 133.0, 124.0, 117.0, 109.0, 104.0, 98.0, 93.0, 86.0, 82.0, 75.0, 72.0, 67.0, 62.0, 55.0, 49.0, 40.0, 33.0, 28.0, 25.0, 22.0, 19.0, 18.0, 18.0, 18.0, 20.0, 22.0, 27.0, 32.0, 36.0, 42.0, 49.0, 56.0, 64.0, 71.0, 80.0, 86.0, 92.0, 101.0, 110.0, 117.0, 122.0, 130.0, 138.0, 146.0, 154.0, 162.0, 167.0, 172.0, 178.0, 181.0, 187.0, 190.0, 196.0, 199.0, 203.0, 205.0, 206.0, 205.0, 201.0, 193.0, 186.0, 178.0, 172.0, 166.0, 160.0, 151.0, 144.0, 137.0, 128.0, 119.0, 113.0, 107.0, 98.0, 89.0, 77.0, 70.0, 64.0, 56.0, 48.0, 44.0, 38.0, 33.0, 29.0, 23.0, 20.0, 17.0, 16.0, 16.0, 17.0, 20.0, 22.0, 27.0, 38.0, 42.0, 48.0, 54.0, 62.0, 70.0, 80.0, 89.0, 98.0, 106.0, 117.0, 124.0, 135.0, 140.0, 148.0, 156.0, 165.0, 171.0, 178.0, 184.0, 190.0, 198.0, 205.0, 208.0, 211.0, 209.0, 204.0, 200.0, 191.0, 182.0, 175.0, 170.0, 161.0, 155.0, 146.0, 141.0, 138.0, 133.0, 130.0, 125.0, 122.0, 118.0, 113.0, 109.0, 104.0, 99.0, 96.0, 93.0, 87.0, 84.0, 79.0, 75.0, 72.0, 68.0, 63.0, 58.0, 55.0, 51.0, 46.0, 42.0, 38.0, 34.0, 31.0, 26.0, 23.0, 19.0, 18.0, 17.0, 16.0, 16.0, 16.0, 17.0, 19.0, 24.0, 27.0, 35.0, 40.0, 44.0, 48.0, 52.0, 57.0, 63.0, 68.0, 74.0, 82.0, 87.0, 94.0, 100.0, 105.0, 111.0, 118.0, 123.0, 130.0, 136.0, 141.0, 145.0, 150.0, 154.0, 158.0, 161.0, 166.0, 171.0, 175.0, 181.0, 186.0, 193.0, 197.0, 201.0, 206.0, 211.0, 211.0, 208.0, 203.0, 198.0, 192.0, 187.0, 182.0, 177.0, 172.0, 166.0, 162.0, 158.0, 155.0, 149.0, 146.0, 142.0, 139.0, 134.0, 130.0, 124.0, 121.0, 117.0, 113.0, 109.0, 105.0, 102.0, 99.0, 95.0, 92.0, 88.0, 84.0, 80.0, 77.0, 72.0, 69.0, 65.0, 62.0, 59.0, 57.0, 51.0, 48.0, 43.0, 39.0, 33.0, 29.0, 26.0, 24.0, 21.0, 18.0, 17.0, 16.0, 15.0, 15.0, 16.0, 19.0, 22.0, 25.0, 30.0, 33.0, 36.0, 40.0, 44.0, 47.0, 53.0, 60.0, 65.0, 70.0, 75.0, 81.0, 86.0, 92.0, 97.0, 101.0, 105.0, 109.0, 113.0, 117.0, 122.0, 125.0, 130.0, 135.0, 139.0, 142.0, 145.0, 147.0, 152.0, 156.0, 159.0, 163.0, 166.0, 169.0, 174.0, 178.0, 183.0, 187.0, 193.0, 199.0, 201.0, 198.0, 194.0, 187.0, 181.0, 176.0, 174.0, 170.0, 167.0, 164.0, 158.0, 150.0, 143.0, 140.0, 132.0, 126.0, 118.0]

	    self.x_pink_3 = [366.0, 367.0, 367.0, 367.0, 368.0, 368.0, 368.0, 367.0, 365.0, 364.0, 364.0, 363.0, 362.0, 361.0, 360.0, 360.0, 360.0, 358.0, 357.0, 356.0, 356.0, 355.0, 354.0, 354.0, 354.0, 355.0, 355.0, 354.0, 353.0, 353.0, 352.0, 352.0, 351.0, 350.0, 350.0, 350.0, 349.0, 348.0, 348.0, 348.0, 348.0, 349.0, 349.0, 349.0, 348.0, 347.0, 348.0, 347.0, 349.0, 353.0, 355.0, 355.0, 355.0, 355.0, 356.0, 357.0, 357.0, 358.0, 360.0, 362.0, 362.0, 362.0, 365.0, 366.0, 366.0, 367.0, 368.0, 366.0, 367.0, 366.0, 366.0, 366.0, 367.0, 367.0, 368.0, 368.0, 368.0, 369.0, 368.0, 368.0, 367.0, 367.0, 366.0, 365.0, 365.0, 365.0, 364.0, 362.0, 361.0, 362.0, 361.0, 360.0, 360.0, 359.0, 357.0, 355.0, 355.0, 355.0, 355.0, 355.0, 357.0, 358.0, 358.0, 357.0, 354.0, 351.0, 349.0, 348.0, 342.0, 337.0, 336.0, 337.0, 340.0, 341.0, 342.0, 341.0, 342.0, 343.0, 342.0, 342.0, 343.0, 345.0, 346.0, 347.0, 347.0, 345.0, 345.0, 345.0, 345.0, 345.0, 345.0, 345.0, 346.0, 346.0, 347.0, 349.0, 350.0, 352.0, 353.0, 352.0, 353.0, 352.0, 353.0, 355.0, 355.0, 355.0, 354.0, 354.0, 355.0, 357.0, 357.0, 358.0, 359.0, 359.0, 357.0, 356.0, 356.0, 355.0, 353.0, 352.0, 351.0, 348.0, 345.0, 344.0, 343.0, 341.0, 338.0, 336.0, 336.0, 336.0, 337.0, 338.0, 338.0, 339.0, 338.0, 337.0, 336.0, 336.0, 336.0, 337.0, 337.0, 337.0, 340.0, 343.0, 343.0, 342.0, 343.0, 345.0, 345.0, 345.0, 345.0, 345.0, 345.0, 348.0, 351.0, 351.0, 353.0, 355.0, 355.0, 355.0, 355.0, 355.0, 356.0, 354.0, 353.0, 356.0, 358.0, 357.0, 357.0, 355.0, 355.0, 355.0, 354.0, 354.0, 354.0, 354.0, 354.0, 353.0, 351.0, 349.0, 349.0, 349.0, 349.0, 348.0, 348.0, 347.0, 346.0, 345.0, 346.0, 346.0, 345.0, 343.0, 343.0, 343.0, 343.0, 342.0, 341.0, 341.0, 340.0, 340.0, 340.0, 342.0, 342.0, 342.0, 341.0, 340.0, 339.0, 336.0, 336.0, 337.0, 340.0, 342.0, 344.0, 344.0, 345.0, 344.0, 342.0, 343.0, 347.0, 347.0, 345.0, 344.0, 343.0, 343.0, 344.0, 344.0, 345.0, 346.0, 346.0, 347.0, 347.0, 347.0, 348.0, 349.0, 349.0, 350.0, 352.0, 353.0, 353.0, 354.0, 354.0, 353.0, 352.0, 352.0, 353.0, 353.0, 352.0, 352.0, 353.0, 352.0, 352.0, 351.0, 353.0, 354.0, 354.0, 353.0, 354.0, 354.0, 353.0, 352.0, 351.0, 351.0, 349.0, 350.0, 350.0, 350.0, 350.0, 349.0, 348.0, 348.0, 348.0, 348.0, 349.0, 348.0, 348.0, 347.0, 347.0, 347.0, 347.0, 346.0, 345.0, 345.0, 344.0, 343.0, 343.0, 342.0, 342.0, 341.0, 341.0, 341.0, 341.0, 340.0, 340.0, 340.0, 339.0, 338.0, 336.0, 337.0, 337.0, 337.0, 336.0, 336.0, 336.0, 337.0, 336.0, 339.0, 338.0, 338.0, 337.0, 336.0, 338.0, 341.0, 341.0, 342.0, 342.0, 342.0, 342.0, 342.0, 344.0, 344.0, 344.0, 344.0, 343.0, 342.0, 341.0, 339.0, 340.0, 339.0, 339.0, 340.0, 340.0, 341.0, 342.0, 342.0, 343.0, 344.0, 344.0, 344.0, 344.0, 345.0, 346.0, 347.0, 346.0, 346.0, 345.0, 345.0, 344.0, 345.0, 346.0, 346.0, 347.0, 346.0, 346.0, 347.0, 347.0, 347.0, 347.0, 347.0, 347.0, 347.0, 347.0, 346.0, 345.0, 346.0, 346.0, 346.0, 346.0, 346.0, 345.0]

	    self.y_pink_3 = [199.0, 199.0, 198.0, 197.0, 192.0, 186.0, 180.0, 172.0, 167.0, 164.0, 160.0, 154.0, 148.0, 141.0, 134.0, 126.0, 118.0, 109.0, 100.0, 92.0, 83.0, 77.0, 71.0, 66.0, 58.0, 52.0, 48.0, 40.0, 34.0, 29.0, 24.0, 20.0, 17.0, 15.0, 13.0, 12.0, 11.0, 10.0, 10.0, 10.0, 12.0, 13.0, 16.0, 20.0, 23.0, 26.0, 29.0, 35.0, 40.0, 45.0, 54.0, 59.0, 65.0, 72.0, 78.0, 84.0, 88.0, 94.0, 101.0, 107.0, 114.0, 119.0, 126.0, 132.0, 139.0, 146.0, 152.0, 158.0, 163.0, 171.0, 176.0, 182.0, 188.0, 193.0, 198.0, 202.0, 205.0, 208.0, 211.0, 210.0, 207.0, 204.0, 199.0, 192.0, 184.0, 175.0, 169.0, 162.0, 154.0, 150.0, 143.0, 135.0, 127.0, 123.0, 115.0, 107.0, 96.0, 88.0, 80.0, 74.0, 67.0, 63.0, 55.0, 50.0, 45.0, 38.0, 31.0, 25.0, 19.0, 16.0, 14.0, 12.0, 10.0, 9.0, 8.0, 8.0, 9.0, 10.0, 11.0, 14.0, 19.0, 23.0, 28.0, 35.0, 40.0, 48.0, 54.0, 63.0, 72.0, 80.0, 90.0, 99.0, 107.0, 112.0, 121.0, 130.0, 138.0, 145.0, 154.0, 160.0, 165.0, 172.0, 175.0, 182.0, 186.0, 191.0, 197.0, 200.0, 202.0, 203.0, 201.0, 196.0, 187.0, 180.0, 173.0, 167.0, 159.0, 152.0, 142.0, 135.0, 128.0, 119.0, 110.0, 105.0, 97.0, 85.0, 75.0, 64.0, 56.0, 49.0, 41.0, 33.0, 28.0, 22.0, 19.0, 16.0, 13.0, 11.0, 10.0, 9.0, 8.0, 8.0, 10.0, 13.0, 17.0, 23.0, 27.0, 33.0, 38.0, 46.0, 54.0, 64.0, 74.0, 83.0, 90.0, 103.0, 113.0, 124.0, 130.0, 140.0, 151.0, 161.0, 167.0, 176.0, 184.0, 188.0, 193.0, 199.0, 204.0, 209.0, 208.0, 202.0, 197.0, 188.0, 179.0, 172.0, 166.0, 156.0, 150.0, 141.0, 137.0, 133.0, 127.0, 123.0, 118.0, 115.0, 110.0, 104.0, 99.0, 92.0, 88.0, 84.0, 81.0, 75.0, 70.0, 64.0, 59.0, 55.0, 48.0, 43.0, 40.0, 34.0, 30.0, 26.0, 24.0, 21.0, 19.0, 17.0, 15.0, 13.0, 11.0, 10.0, 9.0, 9.0, 8.0, 9.0, 10.0, 11.0, 13.0, 17.0, 21.0, 24.0, 30.0, 35.0, 40.0, 46.0, 51.0, 56.0, 61.0, 67.0, 72.0, 80.0, 86.0, 91.0, 96.0, 103.0, 108.0, 116.0, 122.0, 128.0, 132.0, 139.0, 144.0, 150.0, 156.0, 162.0, 170.0, 175.0, 180.0, 185.0, 193.0, 200.0, 205.0, 209.0, 213.0, 214.0, 209.0, 203.0, 196.0, 189.0, 184.0, 178.0, 173.0, 167.0, 161.0, 156.0, 151.0, 148.0, 143.0, 140.0, 136.0, 132.0, 126.0, 120.0, 114.0, 110.0, 106.0, 101.0, 97.0, 94.0, 92.0, 88.0, 84.0, 80.0, 75.0, 71.0, 68.0, 64.0, 58.0, 54.0, 48.0, 46.0, 43.0, 40.0, 34.0, 29.0, 25.0, 22.0, 19.0, 16.0, 15.0, 14.0, 12.0, 11.0, 10.0, 8.0, 8.0, 8.0, 9.0, 12.0, 14.0, 16.0, 20.0, 22.0, 25.0, 29.0, 32.0, 36.0, 41.0, 46.0, 49.0, 55.0, 60.0, 66.0, 71.0, 77.0, 82.0, 88.0, 93.0, 97.0, 102.0, 106.0, 111.0, 114.0, 121.0, 127.0, 131.0, 135.0, 139.0, 141.0, 145.0, 148.0, 152.0, 157.0, 160.0, 164.0, 168.0, 172.0, 177.0, 180.0, 185.0, 190.0, 193.0, 191.0, 186.0, 179.0, 173.0, 168.0, 164.0, 157.0, 153.0, 149.0, 141.0, 135.0, 128.0, 124.0, 117.0, 111.0, 103.0]



	    self.x_green_2_wrong = [432.0, 432.0, 434.0, 433.0, 434.0, 437.0, 442.0, 452.0, 464.0, 475.0, 488.0, 508.0, 519.0, 527.0, 540.0, 550.0, 560.0, 567.0, 570.0, 573.0, 574.0, 574.0, 573.0, 572.0, 573.0, 574.0, 574.0, 571.0, 565.0, 559.0, 548.0, 536.0, 523.0, 510.0, 489.0, 469.0, 457.0, 443.0, 436.0, 430.0, 425.0, 419.0, 418.0, 426.0, 436.0, 448.0, 461.0, 475.0, 488.0, 498.0, 510.0, 521.0, 534.0, 542.0, 552.0, 560.0, 566.0, 572.0, 575.0, 576.0, 576.0, 576.0, 574.0, 573.0, 574.0, 575.0, 575.0, 574.0, 564.0, 551.0, 527.0, 506.0, 489.0, 466.0, 450.0, 440.0, 431.0, 422.0, 418.0, 415.0, 417.0, 420.0, 425.0, 433.0, 443.0, 457.0, 469.0, 484.0, 493.0, 504.0, 516.0, 529.0, 543.0, 552.0, 560.0, 566.0, 569.0, 573.0, 576.0, 577.0, 577.0, 576.0, 574.0, 574.0, 574.0, 575.0, 576.0, 577.0, 576.0, 573.0, 569.0, 563.0, 554.0, 544.0, 528.0, 513.0, 502.0, 489.0, 479.0, 468.0, 457.0, 447.0, 439.0, 431.0, 426.0, 422.0, 424.0, 434.0, 450.0, 466.0, 479.0, 490.0, 500.0, 512.0, 522.0, 529.0, 540.0, 547.0, 558.0, 563.0, 568.0, 571.0, 573.0, 574.0, 575.0, 574.0, 572.0, 571.0, 572.0, 573.0, 574.0, 574.0, 571.0, 565.0, 555.0, 540.0, 518.0, 504.0, 487.0, 475.0, 459.0, 445.0, 436.0, 427.0, 423.0, 423.0, 426.0, 431.0, 442.0, 451.0, 464.0, 478.0, 494.0, 506.0, 519.0, 529.0, 538.0, 545.0, 551.0, 558.0, 565.0, 570.0, 572.0, 574.0, 574.0, 573.0, 572.0, 571.0, 571.0, 573.0, 574.0, 575.0, 575.0, 575.0, 571.0, 566.0, 557.0, 548.0, 532.0, 512.0, 497.0, 486.0, 475.0, 461.0, 454.0, 446.0, 435.0, 426.0, 420.0, 417.0, 418.0, 426.0, 438.0, 454.0, 473.0, 492.0, 512.0, 528.0, 537.0, 551.0, 562.0, 569.0, 571.0, 571.0, 570.0, 568.0, 567.0, 569.0, 572.0, 571.0, 568.0, 562.0, 555.0, 543.0, 532.0, 516.0, 497.0, 483.0, 468.0, 455.0, 439.0, 427.0, 416.0, 415.0, 422.0, 429.0, 437.0, 452.0, 468.0, 475.0, 483.0, 493.0, 501.0, 509.0, 525.0, 537.0, 546.0, 552.0, 557.0, 561.0, 565.0, 570.0, 574.0, 576.0, 577.0, 578.0, 577.0, 577.0, 576.0, 576.0, 577.0, 577.0, 576.0, 572.0, 567.0, 559.0, 552.0, 542.0, 532.0, 525.0, 514.0, 507.0, 501.0, 491.0, 481.0, 473.0, 465.0, 457.0, 447.0, 437.0, 428.0, 426.0, 429.0, 438.0, 454.0, 479.0, 494.0, 510.0, 522.0, 532.0, 548.0, 555.0, 563.0, 570.0, 573.0, 574.0, 574.0, 573.0, 571.0, 570.0, 571.0, 572.0, 575.0, 575.0, 573.0, 567.0, 559.0, 552.0, 540.0, 525.0, 506.0, 494.0, 481.0, 476.0, 467.0, 457.0, 445.0, 434.0, 426.0, 424.0, 428.0, 436.0, 449.0, 464.0, 475.0, 488.0, 500.0, 509.0, 521.0, 532.0, 546.0, 554.0, 561.0, 568.0, 572.0, 575.0, 576.0, 577.0, 577.0, 577.0, 577.0, 576.0, 575.0, 576.0, 576.0, 576.0, 575.0, 572.0, 567.0, 561.0, 552.0, 542.0, 532.0, 522.0, 512.0, 502.0, 492.0, 479.0, 470.0, 459.0, 450.0, 441.0, 431.0, 426.0, 419.0, 419.0, 427.0, 446.0, 464.0, 483.0, 504.0, 522.0, 538.0, 551.0, 561.0, 569.0, 571.0, 572.0, 571.0, 568.0, 567.0, 568.0, 570.0, 571.0, 571.0, 572.0, 570.0, 567.0, 562.0, 556.0, 546.0, 535.0, 517.0]
	    
	    self.y_green_2_wrong = [74.0, 73.0, 74.0, 74.0, 74.0, 74.0, 74.0, 74.0, 75.0, 76.0, 79.0, 87.0, 93.0, 100.0, 112.0, 124.0, 140.0, 160.0, 170.0, 184.0, 204.0, 216.0, 228.0, 238.0, 233.0, 218.0, 206.0, 182.0, 161.0, 147.0, 131.0, 118.0, 106.0, 96.0, 86.0, 80.0, 77.0, 76.0, 77.0, 78.0, 79.0, 81.0, 81.0, 80.0, 78.0, 77.0, 78.0, 79.0, 82.0, 85.0, 90.0, 96.0, 105.0, 113.0, 125.0, 138.0, 149.0, 167.0, 181.0, 194.0, 206.0, 221.0, 232.0, 238.0, 237.0, 231.0, 219.0, 198.0, 163.0, 141.0, 115.0, 100.0, 93.0, 87.0, 86.0, 85.0, 87.0, 89.0, 90.0, 91.0, 91.0, 90.0, 90.0, 88.0, 88.0, 88.0, 89.0, 92.0, 94.0, 98.0, 104.0, 112.0, 123.0, 133.0, 145.0, 156.0, 166.0, 177.0, 193.0, 207.0, 220.0, 227.0, 241.0, 243.0, 241.0, 237.0, 229.0, 215.0, 201.0, 186.0, 170.0, 157.0, 141.0, 130.0, 116.0, 107.0, 101.0, 96.0, 92.0, 90.0, 90.0, 91.0, 91.0, 93.0, 93.0, 94.0, 92.0, 89.0, 88.0, 89.0, 91.0, 94.0, 97.0, 103.0, 108.0, 113.0, 122.0, 130.0, 144.0, 155.0, 172.0, 185.0, 193.0, 202.0, 212.0, 228.0, 240.0, 244.0, 245.0, 238.0, 224.0, 207.0, 189.0, 169.0, 150.0, 131.0, 112.0, 103.0, 94.0, 91.0, 89.0, 89.0, 91.0, 93.0, 95.0, 95.0, 94.0, 93.0, 92.0, 91.0, 91.0, 93.0, 97.0, 102.0, 109.0, 115.0, 123.0, 131.0, 138.0, 148.0, 162.0, 177.0, 189.0, 203.0, 216.0, 224.0, 233.0, 236.0, 238.0, 235.0, 229.0, 220.0, 215.0, 202.0, 184.0, 171.0, 155.0, 143.0, 128.0, 115.0, 108.0, 104.0, 101.0, 97.0, 95.0, 93.0, 93.0, 93.0, 93.0, 93.0, 92.0, 91.0, 90.0, 90.0, 92.0, 99.0, 109.0, 120.0, 127.0, 143.0, 165.0, 184.0, 206.0, 222.0, 233.0, 248.0, 251.0, 244.0, 226.0, 203.0, 182.0, 166.0, 151.0, 135.0, 124.0, 112.0, 103.0, 97.0, 93.0, 91.0, 91.0, 93.0, 97.0, 97.0, 96.0, 95.0, 94.0, 93.0, 95.0, 96.0, 97.0, 100.0, 103.0, 106.0, 114.0, 122.0, 130.0, 136.0, 142.0, 148.0, 155.0, 166.0, 176.0, 185.0, 198.0, 212.0, 223.0, 231.0, 234.0, 234.0, 230.0, 221.0, 205.0, 185.0, 171.0, 156.0, 149.0, 138.0, 130.0, 125.0, 118.0, 115.0, 112.0, 109.0, 106.0, 104.0, 103.0, 103.0, 102.0, 103.0, 104.0, 104.0, 103.0, 102.0, 102.0, 106.0, 111.0, 118.0, 125.0, 132.0, 147.0, 156.0, 170.0, 186.0, 203.0, 217.0, 229.0, 241.0, 249.0, 253.0, 252.0, 246.0, 227.0, 207.0, 191.0, 175.0, 157.0, 149.0, 135.0, 123.0, 113.0, 108.0, 104.0, 103.0, 102.0, 101.0, 101.0, 103.0, 105.0, 105.0, 104.0, 103.0, 102.0, 102.0, 104.0, 106.0, 109.0, 113.0, 120.0, 127.0, 138.0, 147.0, 158.0, 169.0, 180.0, 188.0, 195.0, 204.0, 211.0, 215.0, 224.0, 232.0, 236.0, 234.0, 227.0, 219.0, 210.0, 193.0, 177.0, 164.0, 152.0, 141.0, 132.0, 125.0, 120.0, 115.0, 111.0, 106.0, 104.0, 102.0, 101.0, 101.0, 101.0, 101.0, 103.0, 103.0, 101.0, 100.0, 101.0, 104.0, 112.0, 121.0, 135.0, 152.0, 167.0, 190.0, 207.0, 221.0, 234.0, 250.0, 254.0, 251.0, 241.0, 234.0, 221.0, 212.0, 196.0, 185.0, 173.0, 164.0, 150.0, 138.0, 125.0]
	    
	    self.x_pink_2_wrong = [208.0, 208.0, 208.0, 208.0, 208.0, 208.0, 208.0, 208.0, 208.0, 207.0, 207.0, 206.0, 206.0, 206.0, 206.0, 205.0, 205.0, 205.0, 205.0, 206.0, 205.0, 206.0, 206.0, 207.0, 207.0, 206.0, 206.0, 206.0, 206.0, 206.0, 206.0, 207.0, 207.0, 207.0, 207.0, 207.0, 207.0, 207.0, 207.0, 207.0, 207.0, 206.0, 206.0, 206.0, 206.0, 205.0, 205.0, 205.0, 206.0, 206.0, 206.0, 206.0, 206.0, 205.0, 205.0, 206.0, 205.0, 205.0, 205.0, 205.0, 205.0, 205.0, 205.0, 206.0, 206.0, 206.0, 206.0, 206.0, 207.0, 207.0, 207.0, 207.0, 207.0, 207.0, 208.0, 208.0, 209.0, 209.0, 209.0, 209.0, 210.0, 210.0, 210.0, 210.0, 207.0, 203.0, 198.0, 190.0, 185.0, 177.0, 170.0, 163.0, 156.0, 151.0, 145.0, 139.0, 135.0, 132.0, 129.0, 127.0, 127.0, 127.0, 128.0, 128.0, 128.0, 127.0, 127.0, 127.0, 127.0, 128.0, 130.0, 133.0, 139.0, 144.0, 154.0, 162.0, 168.0, 177.0, 184.0, 192.0, 201.0, 207.0, 215.0, 221.0, 224.0, 224.0, 223.0, 219.0, 216.0, 214.0, 214.0, 214.0, 214.0, 214.0, 213.0, 213.0, 213.0, 213.0, 213.0, 212.0, 211.0, 211.0, 211.0, 211.0, 211.0, 211.0, 210.0, 210.0, 210.0, 211.0, 210.0, 209.0, 209.0, 209.0, 210.0, 210.0, 211.0, 211.0, 211.0, 211.0, 210.0, 211.0, 211.0, 212.0, 212.0, 212.0, 211.0, 209.0, 204.0, 199.0, 193.0, 185.0, 176.0, 170.0, 164.0, 158.0, 152.0, 148.0, 144.0, 139.0, 133.0, 130.0, 129.0, 127.0, 127.0, 127.0, 127.0, 127.0, 127.0, 127.0, 126.0, 126.0, 126.0, 126.0, 128.0, 131.0, 136.0, 141.0, 152.0, 164.0, 171.0, 176.0, 183.0, 192.0, 199.0, 204.0, 212.0, 217.0, 218.0, 219.0, 219.0, 217.0, 215.0, 213.0, 213.0, 212.0, 212.0, 212.0, 212.0, 212.0, 212.0, 211.0, 211.0, 212.0, 212.0, 212.0, 212.0, 211.0, 211.0, 211.0, 210.0, 211.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 211.0, 211.0, 212.0, 213.0, 213.0, 211.0, 209.0, 206.0, 198.0, 190.0, 185.0, 180.0, 175.0, 171.0, 166.0, 161.0, 156.0, 152.0, 147.0, 144.0, 140.0, 137.0, 132.0, 129.0, 127.0, 125.0, 125.0, 125.0, 125.0, 125.0, 125.0, 126.0, 126.0, 126.0, 127.0, 129.0, 133.0, 136.0, 142.0, 149.0, 154.0, 163.0, 168.0, 173.0, 180.0, 188.0, 195.0, 202.0, 208.0, 214.0, 219.0, 224.0, 224.0, 223.0, 222.0, 220.0, 219.0, 219.0, 219.0, 219.0, 218.0, 218.0, 218.0, 218.0, 218.0, 218.0, 218.0, 219.0, 219.0, 220.0, 220.0, 220.0, 220.0, 220.0, 219.0, 218.0, 217.0, 217.0, 217.0, 216.0, 216.0, 215.0, 216.0, 216.0, 216.0, 216.0, 216.0, 217.0, 217.0, 217.0, 217.0, 216.0, 213.0, 207.0, 199.0, 191.0, 182.0, 175.0, 170.0, 164.0, 159.0, 151.0, 146.0, 142.0, 139.0, 136.0, 132.0, 129.0, 126.0, 126.0, 126.0, 126.0, 126.0, 126.0, 126.0, 125.0, 125.0, 125.0, 127.0, 131.0, 134.0, 138.0, 144.0, 152.0, 159.0, 166.0, 173.0, 179.0, 187.0, 195.0, 202.0, 206.0, 209.0, 211.0, 213.0, 216.0, 215.0, 213.0, 212.0, 212.0, 211.0, 210.0, 209.0, 209.0, 209.0, 210.0, 209.0, 210.0, 210.0, 211.0, 211.0, 210.0, 211.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0, 210.0]
	    
	    self.y_pink_2_wrong = [96.0, 96.0, 96.0, 96.0, 96.0, 96.0, 96.0, 96.0, 96.0, 96.0, 96.0, 97.0, 96.0, 96.0, 96.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 96.0, 97.0, 97.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 97.0, 97.0, 97.0, 97.0, 97.0, 98.0, 98.0, 97.0, 97.0, 97.0, 97.0, 97.0, 96.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 97.0, 98.0, 98.0, 98.0, 98.0, 98.0, 98.0, 99.0, 99.0, 99.0, 99.0, 99.0, 99.0, 100.0, 99.0, 100.0, 100.0, 99.0, 99.0, 100.0, 101.0, 103.0, 105.0, 108.0, 113.0, 119.0, 127.0, 133.0, 143.0, 153.0, 163.0, 172.0, 183.0, 195.0, 204.0, 210.0, 221.0, 224.0, 222.0, 219.0, 215.0, 206.0, 199.0, 189.0, 178.0, 169.0, 156.0, 147.0, 134.0, 126.0, 120.0, 116.0, 113.0, 110.0, 108.0, 107.0, 107.0, 108.0, 108.0, 108.0, 108.0, 108.0, 108.0, 108.0, 108.0, 108.0, 108.0, 108.0, 108.0, 108.0, 109.0, 109.0, 108.0, 109.0, 109.0, 109.0, 109.0, 108.0, 109.0, 109.0, 110.0, 109.0, 109.0, 109.0, 109.0, 110.0, 110.0, 110.0, 110.0, 110.0, 110.0, 109.0, 109.0, 109.0, 109.0, 109.0, 109.0, 108.0, 108.0, 108.0, 109.0, 109.0, 109.0, 109.0, 111.0, 113.0, 117.0, 120.0, 125.0, 129.0, 135.0, 141.0, 147.0, 157.0, 168.0, 177.0, 185.0, 197.0, 205.0, 210.0, 216.0, 219.0, 220.0, 217.0, 213.0, 207.0, 202.0, 193.0, 182.0, 173.0, 163.0, 153.0, 140.0, 129.0, 124.0, 121.0, 118.0, 114.0, 112.0, 112.0, 111.0, 111.0, 111.0, 112.0, 112.0, 113.0, 113.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 115.0, 115.0, 115.0, 116.0, 115.0, 115.0, 116.0, 116.0, 116.0, 116.0, 116.0, 116.0, 116.0, 116.0, 115.0, 116.0, 116.0, 115.0, 115.0, 115.0, 115.0, 116.0, 118.0, 120.0, 123.0, 125.0, 128.0, 132.0, 137.0, 142.0, 147.0, 152.0, 158.0, 165.0, 175.0, 182.0, 189.0, 198.0, 203.0, 209.0, 216.0, 220.0, 220.0, 216.0, 209.0, 202.0, 193.0, 185.0, 174.0, 167.0, 156.0, 147.0, 142.0, 135.0, 132.0, 129.0, 126.0, 123.0, 121.0, 120.0, 119.0, 119.0, 119.0, 120.0, 120.0, 120.0, 120.0, 120.0, 120.0, 120.0, 120.0, 120.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 120.0, 121.0, 120.0, 120.0, 120.0, 121.0, 121.0, 121.0, 121.0, 122.0, 122.0, 122.0, 122.0, 122.0, 122.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 122.0, 124.0, 127.0, 129.0, 133.0, 136.0, 143.0, 149.0, 154.0, 159.0, 165.0, 172.0, 182.0, 194.0, 205.0, 210.0, 218.0, 223.0, 223.0, 219.0, 215.0, 208.0, 200.0, 187.0, 175.0, 167.0, 159.0, 151.0, 144.0, 137.0, 132.0, 129.0, 126.0, 123.0, 121.0, 121.0, 120.0, 120.0, 120.0, 120.0, 121.0, 120.0, 120.0, 121.0, 121.0, 121.0, 121.0, 122.0, 122.0, 122.0, 122.0, 122.0, 122.0, 122.0, 122.0, 122.0, 123.0, 123.0, 123.0, 123.0, 123.0, 123.0, 124.0, 124.0, 124.0, 124.0, 124.0, 124.0, 124.0, 124.0] 


            # Node cycle rate (in Hz).
            self.loop_rate = rospy.Rate(10)

            #publisher
	    self.pub=rospy.Publisher('feedback', String ,queue_size=1)


	def callback(self, data):
	    
	    #rospy.loginfo(rospy.get_caller_id() + "I heard %f", data)
	    self.current_exercise_id = int (data.data)
	    print (self.current_exercise_id)
	    '''
	    #detect the currently active excercise 
	    try:
		    self.current_exercise_id = data.data.strip()
		    self.current_exercise_id = int (self.current_exercise_id)
	    	    print (self.current_exercise_id)
	    except Exception as e:
		    #rospy.logininfo ('Error: ' + str (e) ) 
	    '''

	def recording(self, data):
	    if (self.current_exercise_id != -1 and self.current_exercise_id  != 4):		
			#Set the current flag to know for which excercise it is recording the movements of the colored objects
			self.flag = self.current_exercise_id

			#Record x and y coordinates for the green/right hand object
			if ( data.data[0] == 11.0 ):
				self.record_green_x.append(data.data[1])
				self.record_green_y.append(data.data[2])
				print ("green")
				print (self.record_green_x) 
				print (self.record_green_y ) 

			#Record x and y coordinates for the pink/left hand object
			elif ( data.data[0] == 22.0 ):
				self.record_pink_x.append(data.data[1])
				self.record_pink_y.append(data.data[2])
				print ("pink")
				print (self.record_pink_x) 
				print (self.record_pink_y ) 

	    #The user has done the selected excercise. 
	    #System will Calculate and publish the number of repetitions for that excercise and then reset eveyrthing
	    if(self.current_exercise_id == 4):
		
		'''
		if ( self.flag == -1 ):  #TODO comment this block
			#calcualte repetition for pink and green. 
			self.repetition_green_2.append ( self.detect_repetitions(self.y_green_2, threshold1=150, threshold2 = 120, mpd=10))
			self.repetition_pink_2.append (self.detect_repetitions(self.y_pink_2,  threshold1=140, threshold2 = 110, mpd=10))


			self.repetition_green_2.append ( self.detect_repetitions(self.y_green_2_wrong, threshold1=150, threshold2 = 120, mpd=10))
			self.repetition_pink_2.append (self.detect_repetitions(self.y_pink_2_wrong,  threshold1=150, threshold2 = 120, mpd=10))

			#Generate a feedback message based on recorded data
			if ( len(self.repetition_green_2) > 0 and len(self.repetition_pink_2) > 0 ):
				self.msg1 = self.repetition_feedback ( self.repetition_green_2 , self.repetition_pink_2 )
			if ( len(self.repetition_green_2) > 1):
				self.msg2 = self.progress_feedback (self.repetition_green_2 , self.repetition_pink_2)			
		'''	
			
		if ( self.flag == 1 ):  
			#calcualte repetition for green/right and pink/left while user doing excersice #1.
			self.repetition_green_1.append ( self.detect_repetitions(self.record_green_y, threshold1=300, threshold2 = 250, mpd=7))
			self.repetition_pink_1.append (self.detect_repetitions(self.record_pink_y,  threshold1=300, threshold2 = 250, mpd=7))

			#Generate a feedback message based on recorded data
			if ( len(self.repetition_green_1) > 0 and len(self.repetition_pink_1) > 0 ):
				self.msg1 = self.repetition_feedback ( self.repetition_green_1 , self.repetition_pink_1 )
			if ( len(self.repetition_green_1) > 1):
				self.msg2 = self.progress_feedback (self.repetition_green_1 , self.repetition_pink_1)	
			print ( " 1 is selected and ...")
			#reset the flag
			self.flag = 4

		elif ( self.flag == 2 ): 
			#calcualte repetition for green/right and pink/left while user doing excersice #2. 
			self.repetition_green_2.append ( self.detect_repetitions(self.record_green_y, threshold1=150, threshold2 = 120, mpd=10))
			self.repetition_pink_2.append (self.detect_repetitions(self.record_pink_y,  threshold1=140, threshold2 = 110, mpd=10))

			#Generate a feedback message based on recorded data
			if ( len(self.repetition_green_2) > 0 and len(self.repetition_pink_2) > 0 ):
				self.msg1 = self.repetition_feedback ( self.repetition_green_2 , self.repetition_pink_2 )
			if ( len(self.repetition_green_2) > 1):
				self.msg2 = self.progress_feedback (self.repetition_green_2 , self.repetition_pink_2)	
			#reset the flag
			self.flag = 4

		elif ( self.flag == 3 ): 
			#calcualte repetition for green/right and pink/left while user doing excersice #3.
			self.repetition_green_3.append ( self.detect_repetitions(self.record_green_y, threshold1=150, threshold2 = 120, mpd=10))
			self.repetition_pink_3.append (self.detect_repetitions(self.record_pink_y,  threshold1=140, threshold2 = 110, mpd=10))

			#Generate a feedback message based on recorded data
			if ( len(self.repetition_green_2) > 0 and len(self.repetition_pink_2) > 0 ):
				self.msg1 = self.repetition_feedback ( self.repetition_green_2 , self.repetition_pink_2 )
			if ( len(self.repetition_green_2) > 1):
				self.msg2 = self.progress_feedback (self.repetition_green_2 , self.repetition_pink_2)	
			#reset the flag
			self.flag = 4
		
		
		if ( self.flag == 4 ):

			#Publish two feedbacks
			self.pub.publish(self.msg1) 
			print ( self.msg1 )
 			self.pub.publish(self.msg2) 
			print ( self.msg2 ) 

			#reset lists of x and y coordinations
			self.record_green_x = []
			self.record_green_y = []


	#To calcualte the number of repetition peaks using two thresholds 
	def detect_repetitions(self, coordinate_values, threshold1, threshold2, mpd):
		self.repetition = 0
		ind = 0
		while (ind < len(coordinate_values)-mpd-1):
			if (coordinate_values[ind] > threshold1 and coordinate_values[ind+mpd] < threshold2):
				self.repetition += 1
				ind += mpd
			else:
				ind += 1
		return self.repetition
				
	#Function to compare the repetitions for the left and right hands and accordingly give a feedback to the user
	def repetition_feedback (self, repetition_green, repetition_pink ):

		print ( "The number of repetition for green :  " , repetition_green )
		print ( "The number of repetition for pink :  " , repetition_pink  )

		#Give the user feedback based on his/her performance and the number of repetitions on each side
		if ( repetition_green[len(repetition_green)-1]  < (repetition_pink[len(repetition_pink)-1] +1) and repetition_green[len(repetition_green)-1]  > (repetition_pink[len(repetition_pink)-1] -1)  ):
			msg = "Well done!" 
		elif ( repetition_green[len(repetition_green)-1]  > (repetition_pink[len(repetition_pink)-1] +1) ):
			msg = "You did a good job! Try to move your right arm as much as your left arm."
		elif (repetition_green[len(repetition_green)-1]  < (repetition_pink[len(repetition_pink)-1] -1) ):  
			msg = "You did a good job! Try to move your left arm as much as your right arm."
		return msg


	#Funtion to compare the progress in repetition and give a feedback to the user accordingly 
	def progress_feedback (self, repetition_green , repetition_pink ):
		dif = repetition_green[len(repetition_green)-2] -  repetition_green[len(repetition_green)-1]
		if (dif == 0 and repetition_green[len(repetition_green)-2] == 0):
			msg = " Lets move!"
		elif (dif == 0 ):
			msg = "You are performing as good as before. Keep it up!"
		elif ( dif > 0):
			msg= "Great, your performance has improved!" 
		elif ( dif < 0):
			msg = "Your history shows you can do better! "
		return msg
	

	def start(self):

	    #gets the current status of the excerxises: exercises = [0, 0, 0], 0: active, 1:deactive
	    rospy.Subscriber('exercises', Int16, self.callback)
	    #rospy.Subscriber('socket', String, self.callback)
	   

	    #gets x and y coordinates of the green object and pink object
	    rospy.Subscriber('coordinates', numpy_msg(Floats), self.recording)

	    rospy.spin()

if __name__ == '__main__':
    
    rospy.init_node('exercise_recording', anonymous=True)
    my_node = recording_node()
    my_node.start()



